angular.module("app",["ngRoute","LocalStorageModule","uiGmapgoogle-maps"]),angular.module("app").controller("ApplicationCtrl",["$scope","USER_ROLES","UserSvc","$location","$window","localStorageService",function(t,e,n,o,r,a){t.currentUser=a.get("currentUser"),t.userRoles=e,t.isAuthorized=n.isAuthorized,t.setCurrentUser=function(e){a.set("currentUser",e),t.currentUser=a.get("currentUser")},t.$on("flash",function(e,n){t.err=n}),t.logout=function(){t.currentUser=null,n.logout(),delete r.sessionStorage.token,a.remove("currentUser"),o.path("/")}}]).factory("authInterceptor",["$rootScope","$q","$window",function(t,e,n){return{request:function(t){return t.headers=t.headers||{},n.sessionStorage.token&&(t.headers.Authorization=n.sessionStorage.token),t},response:function(t){return 401===t.status,t||e.when(t)}}}]).config(["$httpProvider","localStorageServiceProvider",function(t,e){t.interceptors.push("authInterceptor"),e.setStorageType("sessionStorage")}]),angular.module("app").constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("USER_ROLES",{all:"*",admin:"admin",user:"user",guest:"guest"}),angular.module("app").controller("CheckoutCtrl",["$scope","OrderSvc","$location","OrderFactory","localStorageService",function(t,e,n,o,r){t.save="",t.saveD="",e.fetchOne(o.get()).success(function(n){r.set("currentOrder",n),t.order=r.get("currentOrder");var o=.9*parseInt(t.order.cashtotal);o=parseInt(o);var a=parseInt(t.order.cashtotal),s=4*(a-o);t.discount=s,e.fetchUser(t.order.useraccount).success(function(e){t.user=e})}).error(function(t){r.set("currentOrder",null),n.path("/order")}),t.showDiscount=!1,t.showCash=!0,t.showText="折扣",t.changeD=0,t.now=function(){t.showDiscount=!t.showDiscount,t.showCash=!t.showCash,t.showText=t.showCash?"折扣":"現金",t.order.cashtotal=t.order.cashtotal-t.changeD},t.add=function(e){if(-1===e)if(1===t.save.length)t.save="";else{var n=t.save.substr(0,t.save.length-1);t.save=n}else t.save=t.save+""+e;t.change=parseInt(t.save-t.order.cashtotal),"0"===t.save.charAt(0)&&(t.save=""),0===t.save.length&&(t.change="")},t.addD=function(e){if(-1===e)if(1===t.saveD.length)t.saveD="";else{var n=t.saveD.substr(0,t.saveD.length-1);t.saveD=n}else t.saveD=t.saveD+""+e;t.changeD=parseInt(t.saveD/4),"0"===t.saveD.charAt(0)&&(t.saveD=""),0===t.saveD.length&&(t.changeD="")}}]),angular.module("app").controller("CompleteCtrl",["$scope","CompleteSvc",function(t,e){e.fetchPersonalOrder(t.currentUser.useraccount).success(function(e){for(v in e)t.personalOrder=e[v];currTime=new Date(t.personalOrder.date),b=30,currTime.setMinutes(currTime.getMinutes()+b,currTime.getSeconds(),0),t.timePlus=currTime}).error(function(t){$location.path("/")})}]),angular.module("app").service("CompleteSvc",["$http",function(t){var e=this;e.fetchPersonalOrder=function(e){return t.get("/api/personal_order/"+e)}}]),angular.module("app").controller("ListCtrl",["$scope","$location","OrderSvc","MenuFactory",function(t,e,n,o){function r(){a(t.cart)&&e.path("/menu")}function a(t){return Object.keys(t).length?!1:!0}t.cart=o.get(),r(),t.order=function(){n.order(t.currentUser.useraccount,t.currentUser.username,t.cart,t.totalPrice(),t.mark),e.path("/complete")},t.totalPrice=function(){var e=0;return angular.forEach(t.cart,function(t){e+=t.price*t.quantity}),e},t.totalQuantity=function(){var e=0;return angular.forEach(t.cart,function(t){(""===t.quantity||null===t.quantity||t.quantity<0)&&(t.quantity=1),e+=parseInt(t.quantity)}),e};var s=function(e){return angular.forEach(t.cart,function(t,n){return t.id===e?void(index=n):void 0}),index};t.remove=function(e){var n=-1,n=s(e);if(angular.forEach(t.cart,function(t,o){t.id===e&&(n=o)}),-1!==n){var o=confirm("是否從購物車中移除該商品？");o&&t.cart.splice(n,1)}r()},t.removeAll=function(){var e=confirm("是否清空購物車？");e&&(t.cart=[]),r()},t.qadd=function(e){var n=-1,n=s(e);-1!==n&&(t.cart[n].quantity=parseInt(t.cart[n].quantity)+1)},t.qreduce=function(e){var n=-1,n=s(e);-1!==n&&(t.cart[n].quantity>1?t.cart[n].quantity=parseInt(t.cart[n].quantity)-1:t.remove(e))}}]),angular.module("app").controller("MenuCtrl",["$scope","$location","MenuSvc","MenuFactory",function(t,e,n,o){function r(t,e){for(var n in t)0!==parseInt(t[n].quantity)&&e.unshift(t[n]);e.pop(),e.pop()}n.fetch().success(function(e){t.cart=e}),t.nextPage=function(){t.list=[{},{}],r(t.cart,t.list),o.set(t.list),e.path("/list")};var a=function(e){return angular.forEach(t.cart,function(t,n){return t.id===e?void(index=n):void 0}),index};t.qadd=function(e){var n=-1,n=a(e);-1!==n&&(t.cart[n].quantity=parseInt(t.cart[n].quantity)+1)},t.qreduce=function(e){var n=-1,n=a(e);-1!==n&&t.cart[n].quantity>0&&(t.cart[n].quantity=parseInt(t.cart[n].quantity)-1)}}]).factory("MenuFactory",function(){function t(t){n=t}function e(){return n}var n={};return{set:t,get:e}}),angular.module("app").service("MenuSvc",["$http",function(t){var e=this;e.upload=function(e,n,o){new FormData;return t.post("/api/menu",{file:e,name:n,price:o})},e.fetch=function(){return t.get("/api/menu")}}]),angular.module("app").controller("OrderCtrl",["$scope","OrderSvc","$location","OrderFactory",function(t,e,n,o){t.checkout=function(t){o.set(t),n.path("/checkout")},e.fetch().success(function(e){t.orders=e}),t.$on("ws:new_order",function(e,n){t.$apply(function(){t.orders.push(n)})})}]).factory("OrderFactory",function(){function t(t){n=t}function e(){return n}var n={};return{set:t,get:e}}),angular.module("app").service("OrderSvc",["$http",function(t){var e=this;e.order=function(e,n,o,r,a){return t.post("/api/order",{headers:{"Content-type":"application/json"},useraccount:e,username:n,order:o,cashtotal:r,mark:a})},e.fetch=function(){return t.get("/api/order")},e.fetchOne=function(e){return t.get("/api/checkout/"+e)},e.fetchUser=function(e){return t.post("/api/checkout",{headers:{"Content-type":"application/json"},useraccount:e})}}]),angular.module("app").controller("personalCtrl",["$scope","PersonalSVC",function(t,e){function n(){var e,n,o=0;t.date=new Array,t.mongoDate=[],t.mongoLat=[],t.mongoLon=[];for(v in t.positions)e=new Date(t.positions[o].date),e=e.toDateString(),n=new Date(t.positions[v].date),n=n.toDateString(),n!=e&&(t.date.unshift(e),t.mongoDate.unshift(t.positions[o].date),t.mongoLat.unshift(t.positions[o].latitude),t.mongoLon.unshift(t.positions[o].longitude),o=v,e=new Date(t.positions[o].date),e=e.toDateString());e=new Date(t.positions[o].date),t.date.unshift(e),t.mongoDate.unshift(t.positions[o].date),t.mongoLat.unshift(t.positions[o].latitude),t.mongoLon.unshift(t.positions[o].longitude)}e.ftechHistoryPosition(t.currentUser.useraccount).success(function(e){t.positions=e,n()}).error(function(t){}),e.ftechHistoryOrder(t.currentUser.useraccount).success(function(e){t.orders=e}).error(function(t){}),t.showPoint=!1,t.showOrder=!1,t.showHistoryPoint=function(){t.showPoint=!t.showPoint,t.showOrder=!1},t.showHistoryOrder=function(){t.showOrder=!t.showOrder,t.showPoint=!1},t.change=function(e){var n,o;t.map.center={latitude:t.mongoLat[e],longitude:t.mongoLon[e]},t.polylines[0].path=[],n=new Date(t.mongoDate[e]),n=n.toDateString();for(v in t.positions)if(o=new Date(t.positions[v].date),o=o.toDateString(),o==n){var r=[{latitude:t.positions[v].latitude,longitude:t.positions[v].longitude}];t.polylines[0].path.unshift(r[0])}},t.map={center:{latitude:25.086557,longitude:121.565488},zoom:17,bounds:{}},t.polylines=[{id:1,path:[{latitude:25.086518,longitude:121.56404},{latitude:25.086557,longitude:121.565488}],stroke:{color:"#6060FB",weight:3},editable:!0,draggable:!0,geodesic:!0,visible:!0,icons:[{icon:{path:google.maps.SymbolPath.BACKWARD_OPEN_ARROW},offset:"25px",repeat:"50px"}]}]}]),angular.module("app").service("PersonalSVC",["$http",function(t){var e=this;e.ftechHistoryPosition=function(e){return t.get("/api/history_position/"+e)},e.ftechHistoryOrder=function(e){return t.get("/api/history_order/"+e)}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc","localStorageService",function(t,e,n){t.addPost=function(){t.postBody&&e.create({username:n.get("currentUser").username,body:t.postBody}).success(function(e){t.postBody=null})},e.fetch().success(function(e){t.posts=e}),t.$on("ws:new_post",function(e,n){t.$apply(function(){t.posts.unshift(n)})})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{controller:"",templateUrl:"carbonfootprint.html"}).when("/register",{controller:"UserCtrl",templateUrl:"register.html"}).when("/login",{controller:"UserCtrl",templateUrl:"login.html"}).when("/posts",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/menu",{controller:"MenuCtrl",templateUrl:"menu.html"}).when("/menulist",{controller:"MenuCtrl",templateUrl:"menulist.html"}).when("/list",{controller:"ListCtrl",templateUrl:"list.html"}).when("/personal",{controller:"personalCtrl",templateUrl:"personal.html"}).when("/edit",{controller:"UploadCtrl",templateUrl:"edit.html"}).when("/order",{controller:"OrderCtrl",templateUrl:"order.html"}).when("/checkout",{controller:"CheckoutCtrl",templateUrl:"checkout.html"}).when("/complete",{controller:"CompleteCtrl",templateUrl:"complete.html"}).otherwise({redirectTo:"/"}),e.html5Mode(!0)}]),angular.module("app").controller("UploadCtrl",["$scope","MenuSvc","$location",function(t,e,n){t.upload=function(n,o){var r=t.image;e.upload(r,n,o)}}]).directive("fileModel",["$parse",function(t){return{restrict:"A",link:function(e,n,o){var r=t(o.fileModel),a=r.assign;n.bind("change",function(){e.$apply(function(){a(e,n[0].files[0])})})}}}]),angular.module("app").controller("UserCtrl",["$scope","$rootScope","AUTH_EVENTS","$location","UserSvc",function(t,e,n,o,r){t.login=function(a,s){r.login(a,s).then(function(r){e.$broadcast(n.loginSuccess),t.setCurrentUser(r.data),o.path("/")})},t.checkbox_checked=0,t.passwordck="",t.register=function(e,n,o,a,s,c,i,u){r.createUser(e,n,o,a,s,c,i,u).error(function(e){t.$emit("flash",e)}).success(function(){t.login(n,o)})}}]).directive("passwordMatch",[function(){return{restrict:"A",scope:!0,require:"ngModel",link:function(t,e,n,o){var r=function(){var e=t.$eval(n.ngModel),o=t.$eval(n.passwordMatch);return e==o};t.$watch(r,function(t){o.$setValidity("unique",t)})}}}]),angular.module("app").service("UserSvc",["$http","$window","localStorageService",function(t,e,n){var o=this;o.getUser=function(){return t.get("/api/users")},o.login=function(n,r){return t.post("/api/sessions",{useraccount:n,password:r}).then(function(n){return o.token=n.data,t.defaults.headers.common.Authorization=n.data,e.sessionStorage.token=n.data,o.getUser()})},o.logout=function(){t.defaults.headers.common.Authorization=""},o.createUser=function(e,n,r,a,s,c,i,u){return t.post("/api/users",{username:e,useraccount:n,password:r,sex:a,phone:s,email:c,address:i,born:u}).success(function(t){}).error(function(t){return o.err=t,o.err})},o.isAuthenticated=function(){return!!n.get("currentUser")},o.isAuthorized=function(t){return angular.isArray(t)||(t=[t]),o.isAuthenticated()&&-1!==t.indexOf(n.get("currentUser").auth)}}]),angular.module("app").run(["$rootScope",function(t){var e="wss://localhost:3011",n=new WebSocket(e);n.onopen=function(){console.log("WebSocket connected")},n.onmessage=function(e){console.log(e);var n=JSON.parse(e.data);t.$broadcast("ws:"+n.topic,n.data)}}]);
//# sourceMappingURL=data:application/json;base64,